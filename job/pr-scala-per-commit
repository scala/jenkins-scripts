#!/bin/bash -e

# if there's a mergetarget file (created by pr-scala-distpack, and copied as artifacts by downstream jobs),
# use that as the sha to merge to, so that downstream jobs from pr-scala-distpack
# use the same sha for their $mergebranch ref as the distpack job itself
# this assumes $mergebranch increases strictly monotonically over time
# (e.g, whatever master was during distpack, that sha will still be fetched by fetch $mergebranch later,
# even though the resulting FETCH_HEAD will have moved past $mergetarget)
mergetarget=$( cat $WORKSPACE/mergetarget || echo FETCH_HEAD )

cd $WORKSPACE/scala/

git fetch origin "+pull/${pullrequest}/head:pullreq/${pullrequest}"

# merge the head of the PR into the target mergebranch to make sure it integrates
if [ "EMPTY$(git rev-list $sha..pullreq/${pullrequest})" = "EMPTY" ]
then 
  echo "Merging head $sha of #${pullrequest} into ${mergebranch}."
  git fetch origin --depth 10000 # we once did a shallow clone and jenkins is making us pay for it (unchecking shallow clone does not "unshallow" it)
  git fetch origin $mergebranch
  # if no mergetarget file present, save it for downstream jobs
  [[ -f $WORKSPACE/mergetarget ]] || (git rev-parse FETCH_HEAD > $WORKSPACE/mergetarget)
  git checkout --detach -f $mergetarget
  git clean -fxd
  if (git merge $sha); then
      echo "Building commit $sha of #${pullrequest} (merged into ${mergebranch})."
      (cd $WORKSPACE/ && ./jenkins-scripts/job/$JOB_NAME)
  else
      echo "Merge failed for ${sha}. push --force on ${pullrequest}?. Succeeding trivially"
  fi
else # build intermediate commits as-is
  echo "Building $sha unless already merged into a (master-like) branch in the repository."
  git fetch origin

  HEADS=`git show-ref --dereference --abbrev=10 | grep refs/remotes/origin | cut -d' ' -f1 | sort -u`
  echo "Current repository heads:"
  for h in $HEADS; do git log -n 1 --oneline $h; done

  # do build once or not at all (commit == sha)
  for commit in `git rev-list -n 1 $sha --not $HEADS`
  do 
    git checkout --detach -f $commit
    git log -n 1 --oneline HEAD
    echo "Building commit $commit of #$pullrequest (targeting $mergetarget)."
    (cd $WORKSPACE/ && ./jenkins-scripts/job/$JOB_NAME)
  done
fi
